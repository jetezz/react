import {
  createChainedFunction_default
} from "./chunk-PKCUGAUQ.js";
import {
  _extends,
  _objectWithoutPropertiesLoose
} from "./chunk-TBBU4YOC.js";
import {
  require_react
} from "./chunk-YNCU75EO.js";
import {
  __toESM
} from "./chunk-WNKWOKNR.js";

// node_modules/react-bootstrap/esm/SafeAnchor.js
var import_react = __toESM(require_react());
function isTrivialHref(href) {
  return !href || href.trim() === "#";
}
var SafeAnchor = import_react.default.forwardRef(function(_ref, ref) {
  var _ref$as = _ref.as, Component = _ref$as === void 0 ? "a" : _ref$as, disabled = _ref.disabled, onKeyDown = _ref.onKeyDown, props = _objectWithoutPropertiesLoose(_ref, ["as", "disabled", "onKeyDown"]);
  var handleClick = function handleClick2(event) {
    var href = props.href, onClick = props.onClick;
    if (disabled || isTrivialHref(href)) {
      event.preventDefault();
    }
    if (disabled) {
      event.stopPropagation();
      return;
    }
    if (onClick) {
      onClick(event);
    }
  };
  var handleKeyDown = function handleKeyDown2(event) {
    if (event.key === " ") {
      event.preventDefault();
      handleClick(event);
    }
  };
  if (isTrivialHref(props.href)) {
    props.role = props.role || "button";
    props.href = props.href || "#";
  }
  if (disabled) {
    props.tabIndex = -1;
    props["aria-disabled"] = true;
  }
  return import_react.default.createElement(Component, _extends({
    ref
  }, props, {
    onClick: handleClick,
    onKeyDown: createChainedFunction_default(handleKeyDown, onKeyDown)
  }));
});
SafeAnchor.displayName = "SafeAnchor";
var SafeAnchor_default = SafeAnchor;

export {
  SafeAnchor_default
};
//# sourceMappingURL=chunk-HH5TEXI7.js.map
